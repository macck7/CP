#include<bits/stdc++.h>
using namespace std;

int main()
{
	int n;
	cin>>n;
	vector<int> v(n);
	for(int i=0; i<n;++i){
	 cin>>v[i];
	}

	int to_find;
	cin >>to_find;
	int low=0,hi=n-1,mid;
	int found=0;
	while(hi != low){
		mid=(low+hi)/2;
		if(v[mid]==to_find){
			cout<<mid;
			found=1;
			break;
		}
		else if(v[mid] < to_find){
			low=mid+1;
		}
		else{
			hi=mid;
		}
	}
	if(v[hi]==to_find) cout <<hi<<endl;
	else if(found==0) cout <<"not found"<<endl;
	return 0;
}


MORE OPTIMISED WAY:
-----------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
	int n,q;
	cin>>n>>q;
	vector<int> v(n);
	for(int i=0;i<n;i++){
		cin>>v[i];
	}
	
	while(q--){
		int x;
		cin>>x;
		int l=-1,h=n;
		int index=1;
		while(h-l>1){
			int mid=(l+h)/2;
			if(v[mid]<=x){
				l=mid;
			}
			else{
				h=mid;
			}

		}
		if(l<n && v[l]==x) cout<<"YES"<<"\n";
		else cout<<"NO"<<"\n";
	}		
		
	
}








closet to right:
--------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
	int n,q;
	cin>>n>>q;
	vector<int> v(n);
	for(int i=0;i<n;i++){
		cin>>v[i];
	}
	
	while(q--){
		int x;
		cin>>x;
		int l=-1,h=n;
		int index=1;
		while(h>l+1){
			int mid=(l+h)/2;
			if(v[mid]<x){
				l=mid;
			}
			else{
				h=mid;
			}

		}
		cout<<h+1<<"\n";
	}		
		
	
}


closes to left:
------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
	int n,q;
	cin>>n>>q;
	vector<int> v(n);
	for(int i=0;i<n;i++){
		cin>>v[i];
	}
	
	while(q--){
		int x;
		cin>>x;
		int l=-1,h=n;
		int index=1;
		while(h>l+1){
			int mid=(l+h)/2;
			if(v[mid]<=x){
				l=mid;
			}
			else{
				h=mid;
			}

		}
		cout<<l+1<<"\n";
	}		
		
	
}